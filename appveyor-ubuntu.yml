version: 1.0.{build}
image:
  - Ubuntu

environment:
  AWS_DEFAULT_REGION: us-east-1
  SAM_CLI_DEV: 1
  NODE_VERSION: "14.17.6"
  PYTHON_HOME: "C:\\Python36-x64"
  PYTHON_VERSION: "3.6"
  PYTHON_ARCH: "64"
  NOSE_PARAMETERIZED_NO_WARN: 1
  INSTALL_PY_37_PIP: 1
  INSTALL_PY_38_PIP: 1
  INSTALL_PY_39_PIP: 1
  AWS_S3: "AWS_S3_36"
  AWS_ECR: "AWS_ECR_36"
  APPVEYOR_CONSOLE_DISABLE_PTY: true

install:
  # Start performance monitoring\
  - sh: "cat /proc/cpuinfo"
  - sh: "cat /proc/meminfo"
  - sh: "while true; do top -n 1 -b | head -n 5 | tail -n 3 >> perf.log; sleep 1; done &"

  # apt repo for python3.9 installation
  - sh: "sudo add-apt-repository ppa:deadsnakes/ppa"
  # AppVeyor's apt-get cache might be outdated, and the package could potentially be 404.
  - sh: "sudo apt-get update"

  - sh: "gvm use go1.13"
  - sh: "echo $PATH"
  - sh: "ls /usr/"
  - sh: "JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64"
  - sh: "PATH=$JAVA_HOME/bin:$PATH"
  - sh: "source ${HOME}/venv${PYTHON_VERSION}/bin/activate"
  - sh: "rvm use 2.7.2"
  - sh: "docker --version"
  - sh: "nvm install ${NODE_VERSION}"
  - sh: "npm install npm@7.24.2 -g"
  - sh: "npm -v"

  # Install latest gradle
  - sh: "sudo apt-get -y remove gradle"
  - sh: "wget https://services.gradle.org/distributions/gradle-5.5-bin.zip -P /tmp"
  - sh: "sudo unzip -d /opt/gradle /tmp/gradle-*.zip"
  - sh: "PATH=/opt/gradle/gradle-5.5/bin:$PATH"

  # Install AWS CLI
  - sh: "virtualenv aws_cli"
  - sh: "./aws_cli/bin/python -m pip install awscli"
  - sh: "PATH=$(echo $PWD'/aws_cli/bin'):$PATH"

  - sh: "sudo apt-get -y install python3.6"
  - sh: "sudo apt-get -y install python2.7"
  - sh: "sudo apt-get -y install python3.7"
  - sh: "sudo apt-get -y install python3.8"
  - sh: "sudo apt-get -y install python3.9"

  - sh: "which python3.8"
  - sh: "which python3.7"
  - sh: "which python3.6"
  - sh: "which python3.9"
  - sh: "which python2.7"

  - sh: "PATH=$PATH:/usr/bin/python3.9:/usr/bin/python3.8:/usr/bin/python3.7"
  - sh: "curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py"
  - sh: "curl https://bootstrap.pypa.io/pip/3.6/get-pip.py -o get-pip-36.py"

  - sh: "sudo apt-get -y install python3-distutils"
  - sh: "sudo apt-get -y install python3.9-distutils"
  - ps: "If ($env:INSTALL_PY_39_PIP) {python3.9 get-pip.py --user}"
  - ps: "If ($env:INSTALL_PY_38_PIP) {python3.8 get-pip.py --user}"
  - ps: "If ($env:INSTALL_PY_37_PIP) {python3.7 get-pip.py --user}"
  - ps: "If ($env:INSTALL_PY_36_PIP) {python3.6 get-pip-36.py --user}"

  # required for RIE with arm64 in linux
  - sh: "docker run --rm --privileged multiarch/qemu-user-static --reset -p yes"

  # update ca-certificates which causes failures with newest golang library
  - sh: "sudo apt-get install --reinstall ca-certificates"

build_script:
  - 'python -c "import sys; print(sys.executable)"'

test_script:
  - sh: "pytest -brokenexitcode || true"
  # Pre-dev Tests
  - 'pip install -e ".[pre-dev]"'
  - "pylint --rcfile .pylintrc samcli"

  # Dev Tests
  - 'pip install -e ".[dev]"'
  - "pytest --cov samcli --cov-report term-missing --cov-fail-under 94 tests/unit"
  - "pylint --rcfile .pylintrc samcli"
  - "mypy setup.py samcli tests"
  - "pytest -n 4 tests/functional"

  # Runs only in Linux, logging Public ECR when running canary and cred is available
  #- sh: "
  #  if [[ -n $BY_CANARY ]];
  #    then echo Logging in Public ECR; aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws;
  #  fi"

  #- sh: "pytest tests/integration || true"
  #- sh: "pytest -vv tests/regression"
  - sh: "black --check setup.py tests samcli"

  # Smoke tests run in parallel - it runs on both Linux & Windows
  # Presence of the RUN_SMOKE envvar will run the smoke tests
  #- ps: "If ($env:RUN_SMOKE) {pytest -n 4 -vv tests/smoke}"

after_test:
  # Stop performance monitoring
  - sh: "jobs"
  - sh: "kill %1"

artifacts:
  - path: perf.log
